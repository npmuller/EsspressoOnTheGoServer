
> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /, path: /
method: GET, url: /, path: /
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: /proc/self/fd/9: /usr/local/bin/node: not found
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: /proc/self/fd/9: /usr/local/bin/node: not found
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: /proc/self/fd/9: /usr/local/bin/node: not found
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: /proc/self/fd/9: /usr/local/bin/node: not found
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: /proc/self/fd/9: /usr/local/bin/node: not found
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: /proc/self/fd/9: /usr/local/bin/node: not found
[Thu Mar 30 21:52:27 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: exec: /usr/local/bin/node: not found
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: exec: /usr/local/bin/node: not found
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: exec: /usr/local/bin/node: not found
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: exec: /usr/local/bin/node: not found
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: exec: /usr/local/bin/node: not found
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server starting...
/proc/self/fd/9: 3: exec: /usr/local/bin/node: not found
[Thu Mar 30 21:53:06 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server starting...
sudo: /usr/local/bin/node: command not found
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server starting...
sudo: /usr/local/bin/node: command not found
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server starting...
sudo: /usr/local/bin/node: command not found
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server starting...
sudo: /usr/local/bin/node: command not found
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server starting...
sudo: /usr/local/bin/node: command not found
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server starting...
sudo: /usr/local/bin/node: command not found
[Thu Mar 30 21:53:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:55:52 UTC 2017] EOTG Web Server starting...
/usr/local/eotg-server/api/database/database.js:8
    user     : config.username,
                     ^

TypeError: Cannot read property 'username' of undefined
    at Object.<anonymous> (/usr/local/eotg-server/api/database/database.js:8:22)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/models/collections.js:1:113)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
[Thu Mar 30 21:55:53 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:55:53 UTC 2017] EOTG Web Server starting...
/usr/local/eotg-server/api/database/database.js:8
    user     : config.username,
                     ^

TypeError: Cannot read property 'username' of undefined
    at Object.<anonymous> (/usr/local/eotg-server/api/database/database.js:8:22)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/models/collections.js:1:113)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
[Thu Mar 30 21:55:53 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:55:53 UTC 2017] EOTG Web Server starting...
/usr/local/eotg-server/api/database/database.js:8
    user     : config.username,
                     ^

TypeError: Cannot read property 'username' of undefined
    at Object.<anonymous> (/usr/local/eotg-server/api/database/database.js:8:22)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/models/collections.js:1:113)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
[Thu Mar 30 21:55:54 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:55:54 UTC 2017] EOTG Web Server starting...
/usr/local/eotg-server/api/database/database.js:8
    user     : config.username,
                     ^

TypeError: Cannot read property 'username' of undefined
    at Object.<anonymous> (/usr/local/eotg-server/api/database/database.js:8:22)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/models/collections.js:1:113)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
[Thu Mar 30 21:55:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:55:55 UTC 2017] EOTG Web Server starting...
/usr/local/eotg-server/api/database/database.js:8
    user     : config.username,
                     ^

TypeError: Cannot read property 'username' of undefined
    at Object.<anonymous> (/usr/local/eotg-server/api/database/database.js:8:22)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/models/collections.js:1:113)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
[Thu Mar 30 21:55:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:55:55 UTC 2017] EOTG Web Server starting...
/usr/local/eotg-server/api/database/database.js:8
    user     : config.username,
                     ^

TypeError: Cannot read property 'username' of undefined
    at Object.<anonymous> (/usr/local/eotg-server/api/database/database.js:8:22)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/models/collections.js:1:113)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
[Thu Mar 30 21:55:56 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 21:57:26 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 21:58:31 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 21:58:31 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:05:59 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 22:05:59 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:06:18 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 22:06:18 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:06:37 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 22:07:10 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:07:31 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 22:08:25 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:09:38 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 22:10:22 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:10:22 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 22:10:55 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:12:54 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
Terminated
[Thu Mar 30 22:13:47 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:13:47 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
Killed
[Thu Mar 30 22:13:58 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 22:13:58 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 22:14:11 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:04:34 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:05:23 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:05:24 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:00 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:07:03 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:08:43 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:08:43 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:09:14 UTC 2017] EOTG Web Server starting...
[Thu Mar 30 23:09:14 UTC 2017] EOTG Web Server stoping...
[Thu Mar 30 23:09:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device undefined.
Device undefined successfully registered!
[Fri Mar 31 00:02:41 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 00:02:41 UTC 2017] EOTG Web Server starting...
[Fri Mar 31 00:02:41 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 00:05:20 UTC 2017] EOTG Web Server starting...
[Fri Mar 31 00:05:20 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 00:06:05 UTC 2017] EOTG Web Server starting...
[Fri Mar 31 00:06:05 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 00:06:10 UTC 2017] EOTG Web Server starting...
[Fri Mar 31 00:06:10 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 00:07:11 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Fri Mar 31 01:57:44 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 01:57:46 UTC 2017] EOTG Web Server starting...
[Fri Mar 31 01:57:46 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 01:58:00 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Fri Mar 31 01:58:36 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 01:58:36 UTC 2017] EOTG Web Server starting...
[Fri Mar 31 01:58:36 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 01:58:50 UTC 2017] EOTG Web Server starting...
[Fri Mar 31 01:58:50 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 01:59:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
[Fri Mar 31 02:00:32 UTC 2017] EOTG Web Server stoping...
[Fri Mar 31 02:00:35 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /brewSettingTypes, path: /brewSettingTypes
got request for brew setting types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 34B26F2352522DE.
Trying to register 34B26F2352522DE, already exists!
Device 34B26F2352522DE successfully registered!
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /, path: /
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /brewSettingsTypes, path: /brewSettingsTypes
method: GET, url: /brewSettingTypes, path: /brewSettingTypes
got request for brew setting types!
method: GET, url: /registerDevice/sjsjs, path: /registerDevice/sjsjs
method: GET, url: /registerDevicejjjj, path: /registerDevicejjjj
method: GET, url: /getBrewSettings/1, path: /getBrewSettings/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /brewSettingTypes, path: /brewSettingTypes
got request for brew setting types!
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: GET, url: /brewSettingTypes, path: /brewSettingTypes
got request for brew setting types!
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /brewSettingTypes, path: /brewSettingTypes
got request for brew setting types!
method: GET, url: /brewSettingTypes, path: /brewSettingTypes
got request for brew setting types!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device undefined.
Device undefined successfully registered!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device undefined.
Device undefined successfully registered!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device undefined.
Device undefined successfully registered!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device undefined.
Device undefined successfully registered!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device undefined.
Device undefined successfully registered!
[Tue Apr  4 02:32:07 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 02:32:07 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!









[Tue Apr  4 12:51:55 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 12:51:55 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
Device 0000000028a882e6 successfully registered!
[Tue Apr  4 13:06:17 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:06:17 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:06:23 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:06:23 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:06:29 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:06:29 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:06:34 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:06:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:06:40 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:06:40 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:06:45 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:06:45 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:06:51 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:09:32 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:09:40 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:09:40 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:09:46 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:09:46 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:09:51 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:09:51 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:09:57 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:09:57 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:10:02 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:10:02 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:10:08 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:10:40 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:10:46 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:10:46 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:10:52 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:10:52 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:10:57 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:10:57 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:11:03 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:11:03 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:39
        res.status(200).json({err.message});
                                 ^
SyntaxError: Unexpected token .
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Tue Apr  4 13:11:08 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:11:08 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

[Tue Apr  4 13:11:13 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:13:32 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
Unhandled rejection TypeError: err.message.contains is not a function
    at .<anonymous> (/usr/local/eotg-server/api/routes/devices.js:38:20)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Tue Apr  4 13:15:18 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:15:18 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
Unhandled rejection TypeError: errStr.contains is not a function
    at .<anonymous> (/usr/local/eotg-server/api/routes/devices.js:39:15)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Tue Apr  4 13:16:34 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:16:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
[Tue Apr  4 13:22:01 UTC 2017] EOTG Web Server stoping...
[Tue Apr  4 13:22:01 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/setBrewTime, path: /devices/setBrewTime
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/setBrewTime, path: /devices/setBrewTime
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: GET, url: /devices/getBrewTime, path: /devices/getBrewTime
Getting next brew time.
method: POST, url: /devices/setBrewTime, path: /devices/setBrewTime
method: POST, url: /devices/setBrewTime, path: /devices/setBrewTime
method: POST, url: /devices/setBrewTime, path: /devices/setBrewTime
method: POST, url: /devices/setBrewTime, path: /devices/setBrewTime
method: POST, url: /devices/setBrewTime, path: /devices/setBrewTime
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
[Sat Apr  8 02:28:18 UTC 2017] EOTG Web Server stoping...
[Sat Apr  8 02:28:18 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sat Apr  8 02:31:49 UTC 2017] EOTG Web Server stoping...
[Sat Apr  8 02:31:49 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /coffeeTypes, path: /coffeeTypes
got request for coffee types!
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewTime, path: /devices/setBrewTime
method: POST, url: /devices/setBrewTime, path: /devices/setBrewTime
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
[Fri Apr 14 18:46:27 UTC 2017] EOTG Web Server stoping...
[Fri Apr 14 18:46:27 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
Error getting brew enable with exception ER_ACCESS_DENIED_ERROR: Access denied for user 'root@localhost'@'localhost' (using password: YES)
[Fri Apr 14 18:47:20 UTC 2017] EOTG Web Server stoping...
[Fri Apr 14 18:47:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
[Fri Apr 14 18:56:43 UTC 2017] EOTG Web Server stoping...
[Fri Apr 14 18:56:43 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Fri Apr 14 18:57:27 UTC 2017] EOTG Web Server stoping...
[Fri Apr 14 18:57:27 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/getPresets/13, path: /devices/getPresets/13
method: GET, url: /devices/getPresets/13, path: /devices/getPresets/13
[Sat Apr 15 15:48:52 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:48:52 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:29:8)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 15:48:58 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:48:58 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:29:8)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 15:49:04 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:49:04 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:29:8)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 15:49:09 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:49:09 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:29:8)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 15:49:15 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:49:15 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:29:8)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 15:49:20 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:49:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:29:8)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 15:49:26 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:57:06 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /coffeeTypes, path: /coffeeTypes
[Sat Apr 15 15:58:10 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 15:58:10 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception select `brew_preset_setting`.*, `brew_preset`.`device_id` as `_pivot_device_id`, `brew_preset`.`brew_preset_setting_id` as `_pivot_brew_preset_setting_id` from `brew_preset_setting` inner join `brew_preset` on `brew_preset`.`brew_preset_setting_id` = `brew_preset_setting`.`id` where `brew_preset`.`device_id` in (13) - ER_BAD_FIELD_ERROR: Unknown column 'brew_preset.brew_preset_setting_id' in 'field list'
[Sat Apr 15 16:05:28 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:05:28 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_setting`.`brew_preset` in (13) - ER_BAD_FIELD_ERROR: Unknown column 'brew_preset_setting.brew_preset' in 'where clause'
[Sat Apr 15 16:06:04 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:06:04 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sat Apr 15 16:06:32 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:06:32 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sat Apr 15 16:08:45 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:08:45 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
[Sat Apr 15 16:10:45 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:10:45 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Brew Preset is:
{ id: 1,
  device_id: 13,
  dsc: 'Light Roast',
  enabled: <Buffer 01>,
  created_at: 2017-04-15T15:42:53.000Z,
  updated_at: 2017-04-15T15:42:53.000Z }
[Sat Apr 15 16:29:20 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:29:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception BrewPresetSettings is not defined
[Sat Apr 15 16:30:25 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:30:25 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_setting`.`brew_preset` in (13) - ER_BAD_FIELD_ERROR: Unknown column 'brew_preset_setting.brew_preset' in 'where clause'
[Sat Apr 15 16:34:56 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:34:56 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception select `brew_preset_setting`.*, `brew_preset_id`.`device_id` as `_pivot_device_id`, `brew_preset_id`.`brew_preset_setting_id` as `_pivot_brew_preset_setting_id` from `brew_preset_setting` inner join `brew_preset_id` on `brew_preset_id`.`brew_preset_setting_id` = `brew_preset_setting`.`id` where `brew_preset_id`.`device_id` in (13) - ER_NO_SUCH_TABLE: Table 'brew.brew_preset_id' doesn't exist
[Sat Apr 15 16:35:35 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:35:35 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception select `brew_preset_setting`.*, `brew_preset`.`device_id` as `_pivot_device_id`, `brew_preset`.`brew_preset_setting_id` as `_pivot_brew_preset_setting_id` from `brew_preset_setting` inner join `brew_preset` on `brew_preset`.`brew_preset_setting_id` = `brew_preset_setting`.`id` where `brew_preset`.`device_id` in (13) - ER_BAD_FIELD_ERROR: Unknown column 'brew_preset.brew_preset_setting_id' in 'field list'
[Sat Apr 15 16:40:00 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:40:00 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception device is not defined
[Sat Apr 15 16:41:08 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:41:08 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Brew Preset is:
{ id: 1,
  brew_preset_id: 1,
  preset_setting_type_id: 1,
  preset_setting_value: '190',
  created_at: 2017-04-15T15:47:09.000Z,
  updated_at: 2017-04-15T15:47:09.000Z }
Brew Preset is:
{ id: 2,
  brew_preset_id: 1,
  preset_setting_type_id: 2,
  preset_setting_value: '45',
  created_at: 2017-04-15T15:47:09.000Z,
  updated_at: 2017-04-15T15:47:09.000Z }
[Sat Apr 15 16:42:04 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:42:04 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
[Sat Apr 15 16:43:36 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:43:36 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
[Sat Apr 15 16:45:37 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 16:45:37 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
[Sat Apr 15 17:01:41 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 17:01:41 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sat Apr 15 17:05:45 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 17:05:45 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
new preset settings for preset 1:undefined
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
new preset settings for preset 1:undefined
[Sat Apr 15 17:18:39 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 17:18:39 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
new preset settings for preset 1: {"settings": [{"id": 1,"value": "185"}, {“id”: 3,“Value”: “M0600,W0630”}]}
[Sat Apr 15 18:00:51 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:00:51 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
Unhandled rejection Error: ER_BAD_FIELD_ERROR: Unknown column 'preset_id' in 'field list'
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    at TCP.onread (net.js:548:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Sat Apr 15 18:06:51 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:06:51 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
Unhandled rejection Error: ER_BAD_FIELD_ERROR: Unknown column 'preset_id' in 'field list'
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    at TCP.onread (net.js:548:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Sat Apr 15 18:10:18 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:10:18 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
[Sat Apr 15 18:16:12 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:16:12 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
device status is:
ModelBase {
  attributes: { device_id: '13' },
  _previousAttributes: {},
  changed: { device_id: '13' },
  relations: {},
  cid: 'c1' }
[Sat Apr 15 18:25:34 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:25:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
[Sat Apr 15 18:32:56 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:32:56 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
Error setting brew preset for device 13 and preset 1 with exception insert into `device_status` (`brew_preset_id`, `created_at`, `device_id`, `updated_at`) values ('1', '2017-04-15 18:33:14.040', '13', '2017-04-15 18:33:14.040') - ER_DUP_ENTRY: Duplicate entry '13' for key 'PRIMARY'
[Sat Apr 15 18:40:17 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:40:17 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
TypeError: Cannot read property 'brew_preset_id' of undefined
    at /usr/local/eotg-server/api/routes/presets.js:24:25
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at next (/usr/local/eotg-server/api/node_modules/express/lib/router/route.js:137:13)
    at /usr/local/eotg-server/api/node_modules/body-parser/lib/read.js:129:5
    at invokeCallback (/usr/local/eotg-server/api/node_modules/raw-body/index.js:262:16)
    at done (/usr/local/eotg-server/api/node_modules/raw-body/index.js:251:7)
    at IncomingMessage.onEnd (/usr/local/eotg-server/api/node_modules/raw-body/index.js:307:7)
    at emitNone (events.js:86:13)
    at IncomingMessage.emit (events.js:185:7)
    at endReadableNT (_stream_readable.js:974:12)
    at _combinedTickCallback (internal/process/next_tick.js:74:11)
    at process._tickCallback (internal/process/next_tick.js:98:9)
[Sat Apr 15 18:42:00 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:42:00 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
Promise {
  _bitField: 69206016,
  _fulfillmentHandler0: undefined,
  _rejectionHandler0: 
   Promise {
     _bitField: 2097152,
     _fulfillmentHandler0: undefined,
     _rejectionHandler0: undefined,
     _promise0: undefined,
     _receiver0: undefined,
     _boundTo: 
      ModelBase {
        attributes: [Object],
        _previousAttributes: {},
        changed: [Object],
        relations: {},
        cid: 'c1',
        _knex: null } },
  _promise0: undefined,
  _receiver0: undefined,
  _boundTo: 
   ModelBase {
     attributes: { device_id: '13' },
     _previousAttributes: {},
     changed: { device_id: '13' },
     relations: {},
     cid: 'c1',
     _knex: null } }
TypeError: Cannot read property 'brew_preset_id' of undefined
    at /usr/local/eotg-server/api/routes/presets.js:25:25
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at next (/usr/local/eotg-server/api/node_modules/express/lib/router/route.js:137:13)
    at /usr/local/eotg-server/api/node_modules/body-parser/lib/read.js:129:5
    at invokeCallback (/usr/local/eotg-server/api/node_modules/raw-body/index.js:262:16)
    at done (/usr/local/eotg-server/api/node_modules/raw-body/index.js:251:7)
    at IncomingMessage.onEnd (/usr/local/eotg-server/api/node_modules/raw-body/index.js:307:7)
    at emitNone (events.js:86:13)
    at IncomingMessage.emit (events.js:185:7)
    at endReadableNT (_stream_readable.js:974:12)
    at _combinedTickCallback (internal/process/next_tick.js:74:11)
    at process._tickCallback (internal/process/next_tick.js:98:9)
[Sat Apr 15 18:42:30 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:42:30 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sat Apr 15 18:46:10 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:46:10 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
Error setting brew preset for device 13 and preset -1 with exception insert into `device_status` (`ac_power_state`, `battery_level`, `brew_preset_id`, `created_at`, `device_id`, `updated_at`, `water_level`) values (0, 'Medium', '-1', '2017-04-15 18:47:01.852', 13, '2017-04-15 18:47:01.852', 'Low') - ER_DUP_ENTRY: Duplicate entry '13' for key 'PRIMARY'
[Sat Apr 15 18:51:05 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:51:05 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
Error setting brew preset for device 13 and preset -1 with exception insert into `device_status` (`ac_power_state`, `battery_level`, `brew_preset_id`, `created_at`, `device_id`, `updated_at`, `water_level`) values (0, 'Medium', '-1', '2017-04-15 18:51:21.127', '13', '2017-04-15 18:51:21.127', 'Low') - ER_DUP_ENTRY: Duplicate entry '13' for key 'PRIMARY'
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:31:37)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Sat Apr 15 18:53:41 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 18:53:41 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
Error setting brew preset for device 13 and preset -1 with exception insert into `device_status` (`ac_power_state`, `battery_level`, `brew_preset_id`, `created_at`, `device_id`, `updated_at`, `water_level`) values (0, 'Medium', 1, '2017-04-15 18:53:54.527', 13, '2017-04-15 18:53:54.527', 'Low') - ER_DUP_ENTRY: Duplicate entry '13' for key 'PRIMARY'
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:33:37)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Sat Apr 15 19:09:52 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:09:52 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:95:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Sat Apr 15 19:17:05 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:17:06 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
necessary info: preset id = 1, preset setting type = undefined
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:59:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Sat Apr 15 19:19:07 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:19:07 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
{"settings": [{"id": 1,"value": "185"}, {“id”: 3,“Value”: “M0600,W0630”}]}
Changing preset for device 13 to preset 1
{
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
s
necessary info: preset id = 1, preset setting type = undefined
e
necessary info: preset id = 1, preset setting type = undefined
t
necessary info: preset id = 1, preset setting type = undefined
t
necessary info: preset id = 1, preset setting type = undefined
i
necessary info: preset id = 1, preset setting type = undefined
n
necessary info: preset id = 1, preset setting type = undefined
g
necessary info: preset id = 1, preset setting type = undefined
s
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
:
necessary info: preset id = 1, preset setting type = undefined
 
necessary info: preset id = 1, preset setting type = undefined
[
necessary info: preset id = 1, preset setting type = undefined
{
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
i
necessary info: preset id = 1, preset setting type = undefined
d
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
:
necessary info: preset id = 1, preset setting type = undefined
 
necessary info: preset id = 1, preset setting type = undefined
1
necessary info: preset id = 1, preset setting type = undefined
,
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
v
necessary info: preset id = 1, preset setting type = undefined
a
necessary info: preset id = 1, preset setting type = undefined
l
necessary info: preset id = 1, preset setting type = undefined
u
necessary info: preset id = 1, preset setting type = undefined
e
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
:
necessary info: preset id = 1, preset setting type = undefined
 
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
1
necessary info: preset id = 1, preset setting type = undefined
8
necessary info: preset id = 1, preset setting type = undefined
5
necessary info: preset id = 1, preset setting type = undefined
"
necessary info: preset id = 1, preset setting type = undefined
}
necessary info: preset id = 1, preset setting type = undefined
,
necessary info: preset id = 1, preset setting type = undefined
 
necessary info: preset id = 1, preset setting type = undefined
{
necessary info: preset id = 1, preset setting type = undefined
“
necessary info: preset id = 1, preset setting type = undefined
i
necessary info: preset id = 1, preset setting type = undefined
d
necessary info: preset id = 1, preset setting type = undefined
”
necessary info: preset id = 1, preset setting type = undefined
:
necessary info: preset id = 1, preset setting type = undefined
 
necessary info: preset id = 1, preset setting type = undefined
3
necessary info: preset id = 1, preset setting type = undefined
,
necessary info: preset id = 1, preset setting type = undefined
“
necessary info: preset id = 1, preset setting type = undefined
V
necessary info: preset id = 1, preset setting type = undefined
a
necessary info: preset id = 1, preset setting type = undefined
l
necessary info: preset id = 1, preset setting type = undefined
u
necessary info: preset id = 1, preset setting type = undefined
e
necessary info: preset id = 1, preset setting type = undefined
”
necessary info: preset id = 1, preset setting type = undefined
:
necessary info: preset id = 1, preset setting type = undefined
 
necessary info: preset id = 1, preset setting type = undefined
“
necessary info: preset id = 1, preset setting type = undefined
M
necessary info: preset id = 1, preset setting type = undefined
0
necessary info: preset id = 1, preset setting type = undefined
6
necessary info: preset id = 1, preset setting type = undefined
0
necessary info: preset id = 1, preset setting type = undefined
0
necessary info: preset id = 1, preset setting type = undefined
,
necessary info: preset id = 1, preset setting type = undefined
W
necessary info: preset id = 1, preset setting type = undefined
0
necessary info: preset id = 1, preset setting type = undefined
6
necessary info: preset id = 1, preset setting type = undefined
3
necessary info: preset id = 1, preset setting type = undefined
0
necessary info: preset id = 1, preset setting type = undefined
”
necessary info: preset id = 1, preset setting type = undefined
}
necessary info: preset id = 1, preset setting type = undefined
]
necessary info: preset id = 1, preset setting type = undefined
}
necessary info: preset id = 1, preset setting type = undefined
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Error setting brew preset settings for device 13 and preset 1 with exception Undefined binding(s) detected when compiling SELECT query: select `brew_preset_setting`.* from `brew_preset_setting` where `brew_preset_id` = ? and `preset_setting_type_id` = ? limit ?
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
Unhandled rejection Error: Can't set headers after they are sent.
    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:356:11)
    at ServerResponse.header (/usr/local/eotg-server/api/node_modules/express/lib/response.js:725:10)
    at ServerResponse.send (/usr/local/eotg-server/api/node_modules/express/lib/response.js:170:12)
    at ServerResponse.json (/usr/local/eotg-server/api/node_modules/express/lib/response.js:256:15)
    at .<anonymous> (/usr/local/eotg-server/api/routes/presets.js:61:33)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Sat Apr 15 19:27:28 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:27:28 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
[Sat Apr 15 19:31:38 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:31:38 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
[Sat Apr 15 19:32:06 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:32:06 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sat Apr 15 19:32:28 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:32:28 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{}
undefined
Changing preset for device 13 to preset 1
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
req.body:
{ settings: [ { id: 1, value: '185' } ] }
[ { id: 1, value: '185' } ]
Changing preset for device 13 to preset 1
{ id: 1, value: '185' }
necessary info: preset id = 1, preset setting type = 1
Unhandled rejection Error: ER_BAD_FIELD_ERROR: Unknown column 'preset_value' in 'field list'
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    at TCP.onread (net.js:548:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Sat Apr 15 19:45:50 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:45:50 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
{ id: 1, value: '185' }
necessary info: preset id = 1, preset setting type = 1
Unhandled rejection Error: ER_BAD_FIELD_ERROR: Unknown column 'preset_value' in 'field list'
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    at TCP.onread (net.js:548:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Sat Apr 15 19:47:58 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:47:58 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
{ id: 1, value: '185' }
necessary info: preset id = 1, preset setting type = 1
Unhandled rejection Error: ER_BAD_FIELD_ERROR: Unknown column 'preset_value' in 'field list'
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    at TCP.onread (net.js:548:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Sat Apr 15 19:49:05 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:49:05 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sat Apr 15 19:49:21 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 19:49:21 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/1, path: /presets/setDevicePreset/13/1
Changing preset for device 13 to preset 1
{ id: 1, value: '185' }
necessary info: preset id = 1, preset setting type = 1
[Sat Apr 15 20:23:43 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:23:43 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:73
    else { 
    ^^^^
SyntaxError: Unexpected token else
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 20:23:49 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:23:49 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:73
    else { 
    ^^^^
SyntaxError: Unexpected token else
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 20:23:55 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:23:55 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:73
    else { 
    ^^^^
SyntaxError: Unexpected token else
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 20:24:00 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:24:00 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:73
    else { 
    ^^^^
SyntaxError: Unexpected token else
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 20:24:06 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:24:06 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:73
    else { 
    ^^^^
SyntaxError: Unexpected token else
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 20:24:11 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:24:11 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:73
    else { 
    ^^^^
SyntaxError: Unexpected token else
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sat Apr 15 20:24:17 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:25:14 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
[Sat Apr 15 20:29:26 UTC 2017] EOTG Web Server stoping...
[Sat Apr 15 20:29:26 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
ReferenceError: currentBrewPreset is not defined
    at /usr/local/eotg-server/api/routes/devices.js:67:46
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at next (/usr/local/eotg-server/api/node_modules/express/lib/router/route.js:137:13)
    at Route.dispatch (/usr/local/eotg-server/api/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at /usr/local/eotg-server/api/node_modules/express/lib/router/index.js:281:22
    at param (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:354:14)
    at param (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:365:14)
    at Function.process_params (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:410:3)
    at next (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:174:3)
    at router (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:317:13)
    at /usr/local/eotg-server/api/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:335:12)
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
ReferenceError: currentBrewPreset is not defined
    at /usr/local/eotg-server/api/routes/devices.js:67:46
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at next (/usr/local/eotg-server/api/node_modules/express/lib/router/route.js:137:13)
    at Route.dispatch (/usr/local/eotg-server/api/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at /usr/local/eotg-server/api/node_modules/express/lib/router/index.js:281:22
    at param (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:354:14)
    at param (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:365:14)
    at Function.process_params (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:410:3)
    at next (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:174:3)
    at router (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/usr/local/eotg-server/api/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:317:13)
    at /usr/local/eotg-server/api/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:335:12)
[Sun Apr 16 00:43:42 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:43:42 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
Error getting device status in settings request for device id 13
[Sun Apr 16 00:46:05 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:46:05 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
Error getting device status in settings request for device id 13: currentBrewPreset is not defined
[Sun Apr 16 00:47:56 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:47:56 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:202
});
^
SyntaxError: Unexpected token }
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sun Apr 16 00:48:01 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:48:01 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:202
});
^
SyntaxError: Unexpected token }
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sun Apr 16 00:48:07 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:48:07 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:202
});
^
SyntaxError: Unexpected token }
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sun Apr 16 00:48:12 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:48:12 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:202
});
^
SyntaxError: Unexpected token }
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sun Apr 16 00:48:18 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:48:18 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:202
});
^
SyntaxError: Unexpected token }
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sun Apr 16 00:48:23 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:48:23 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:202
});
^
SyntaxError: Unexpected token }
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/bin/nodejs" "/usr/bin/npm" "start"
npm ERR! node v6.9.5
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/eotg-server/api/npm-debug.log
[Sun Apr 16 00:48:29 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:52:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
[Sun Apr 16 00:54:10 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:54:10 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
ModelBase {
  attributes: 
   { device_id: 13,
     battery_level: 'Medium',
     water_level: 'Low',
     ac_power_state: 0,
     brew_preset_id: 1,
     created_at: 2017-04-15T18:30:26.000Z,
     updated_at: 2017-04-15T19:40:29.000Z },
  _previousAttributes: 
   { device_id: 13,
     battery_level: 'Medium',
     water_level: 'Low',
     ac_power_state: 0,
     brew_preset_id: 1,
     created_at: 2017-04-15T18:30:26.000Z,
     updated_at: 2017-04-15T19:40:29.000Z },
  changed: {},
  relations: {},
  cid: 'c1',
  id: 13,
  _knex: null }
Error getting device status in settings request for device id 13: currentBrewPreset is not defined
[Sun Apr 16 00:59:20 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 00:59:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
retrieved bp id: 1
Error getting device status in settings request for device id 13: currentBrewPreset is not defined
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
retrieved bp id: 1
Error getting device status in settings request for device id 13: currentBrewPreset is not defined
[Sun Apr 16 01:00:43 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 01:00:43 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
Error getting device status in settings request for device id 13: currentBrewPreset is not defined
[Sun Apr 16 01:06:34 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 01:06:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is 1
Error getting device status in settings request for device id 13: Cannot read property 'fetch' of undefined
[Sun Apr 16 01:07:41 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 01:07:41 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is 1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is 1
[Sun Apr 16 02:13:20 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 02:13:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/14, path: /status/getDeviceStatus/14
Getting status for device 14.
Error getting device status for device 14
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
Changing status for device 13
[Sun Apr 16 02:23:41 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 02:23:41 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
[ { statusType: 'battery_level', statusValue: 'high' },
  { statusType: 'water_level', statusValue: 'high' } ]
Changing status battery_level for device 13
Changing status water_level for device 13
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
[ { statusType: 'ac_power_state', statusValue: 0 },
  { statusType: 'water_level', statusValue: 'high' } ]
Changing status ac_power_state for device 13
Changing status water_level for device 13
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
[ { statusType: 'ac_power_state', statusValue: 1 },
  { statusType: 'water_level', statusValue: 'high' } ]
Changing status ac_power_state for device 13
Changing status water_level for device 13
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
[ { statusType: 'ac_power_state', statusValue: 0 } ]
Changing status ac_power_state for device 13
[Sun Apr 16 02:36:45 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 02:36:45 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
No device identifier or MAC given to register!
[Sun Apr 16 02:50:52 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 02:50:52 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: GET, url: /devices/registerDevice, path: /devices/registerDevice
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
undefined, undefined
No device identifier or MAC given to register!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
34B26F2352522DE, FF:FF:FA:FA:FF:FF:FF:FF
Attempting to register device 34B26F2352522DE.
Trying to register 34B26F2352522DE, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
00000002, FF:FF:FA:FA:FF:FF:FF:FF
Attempting to register device 00000002.
Device 00000002 successfully registered!
Unhandled rejection Error: ER_BAD_FIELD_ERROR: Unknown column 'brew_preset_state' in 'field list'
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    at TCP.onread (net.js:548:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Sun Apr 16 02:56:23 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 02:56:23 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000002, FF:FF:FA:FA:FF:FF:FF:FF
Attempting to register device 0000002.
Device 0000002 successfully registered!
Unhandled rejection CustomError: No Rows Updated
    at .<anonymous> (/usr/local/eotg-server/api/node_modules/bookshelf/lib/model.js:1057:19)
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:693:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
[Sun Apr 16 02:57:34 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 02:57:34 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000002, FF:FF:FA:FA:FF:FF:FF:FF
Attempting to register device 0000002.
Trying to register 0000002, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000002, FF:FF:FA:FA:FF:FF:FF:FF
Attempting to register device 0000000002.
Device 0000000002 successfully registered!
[Sun Apr 16 03:38:21 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 03:38:21 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getPresets/13, path: /status/getPresets/13
method: GET, url: /status/getPresets/13, path: /status/getPresets/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
[Sun Apr 16 17:09:57 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:09:57 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:30:8)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-16T17_10_03_816Z-debug.log
[Sun Apr 16 17:10:03 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:10:03 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:30:8)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-16T17_10_09_516Z-debug.log
[Sun Apr 16 17:10:09 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:10:09 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:30:8)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-16T17_10_15_144Z-debug.log
[Sun Apr 16 17:10:15 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:10:15 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:30:8)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-16T17_10_20_626Z-debug.log
[Sun Apr 16 17:10:20 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:10:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:30:8)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-16T17_10_26_146Z-debug.log
[Sun Apr 16 17:10:26 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:10:26 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458
      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));
      ^

TypeError: Router.use() requires middleware function but got a Object
    at Function.use (/usr/local/eotg-server/api/node_modules/express/lib/router/index.js:458:13)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:30:8)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/server.js:5:14)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-16T17_10_31_817Z-debug.log
[Sun Apr 16 17:10:31 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:15:21 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception brewPreset.related is not a function
[Sun Apr 16 17:19:38 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 17:19:38 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception Cannot convert object to primitive value
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception Cannot convert object to primitive value
[Sun Apr 16 18:57:04 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 18:57:04 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception brewPreset is not defined
[Sun Apr 16 18:58:11 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 18:58:11 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sun Apr 16 18:58:25 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 18:58:25 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
brewPresets = [Object Model]
[Sun Apr 16 18:59:20 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 18:59:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Sun Apr 16 19:11:19 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 19:11:19 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
brewPresets = undefined
[Sun Apr 16 19:13:59 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 19:13:59 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
Error getting brew settings for device 13 with exception Cannot convert object to primitive value
[Sun Apr 16 19:17:58 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 19:17:58 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
brewPresets = 
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1',
  _knex: null,
  id: 1 }
[Sun Apr 16 19:32:14 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 19:32:14 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
brewPresets = 
CollectionBase {
  model: 
   { [Function]
     super_: [Function: Events],
     extend: [Function: extend],
     extended: [Function: extended],
     __super__: 
      ModelBase {
        _builder: [Function: builderFn],
        _relation: [Function: _relation],
        Collection: [Object] },
     NotFoundError: [Function: ErrorCtor],
     NoRowsUpdatedError: [Function: ErrorCtor],
     NoRowsDeletedError: [Function: ErrorCtor],
     forge: [Function: forge],
     collection: [Function: collection],
     count: [Function: count],
     fetchAll: [Function: fetchAll],
     where: [Function],
     query: [Function] },
  length: 2,
  models: 
   [ ModelBase {
       attributes: [Object],
       _previousAttributes: [Object],
       changed: {},
       relations: [Object],
       cid: 'c2',
       id: 1 },
     ModelBase {
       attributes: [Object],
       _previousAttributes: [Object],
       changed: {},
       relations: [Object],
       cid: 'c3',
       id: 2 } ],
  _byId: 
   { '1': 
      ModelBase {
        attributes: [Object],
        _previousAttributes: [Object],
        changed: {},
        relations: [Object],
        cid: 'c2',
        id: 1 },
     '2': 
      ModelBase {
        attributes: [Object],
        _previousAttributes: [Object],
        changed: {},
        relations: [Object],
        cid: 'c3',
        id: 2 },
     c2: 
      ModelBase {
        attributes: [Object],
        _previousAttributes: [Object],
        changed: {},
        relations: [Object],
        cid: 'c2',
        id: 1 },
     c3: 
      ModelBase {
        attributes: [Object],
        _previousAttributes: [Object],
        changed: {},
        relations: [Object],
        cid: 'c3',
        id: 2 } },
  _knex: null,
  _events: {},
  _eventsCount: 0 }
[Sun Apr 16 19:36:26 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 19:36:26 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2',
  id: 1 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3',
  id: 2 }
[Sun Apr 16 19:44:50 UTC 2017] EOTG Web Server stoping...
[Sun Apr 16 19:44:50 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2',
  id: 1 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3',
  id: 2 }
method: GET, url: /status/getDeviceStatus/14, path: /status/getDeviceStatus/14
Getting status for device 14.
Error getting device status for device 14
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
[Mon Apr 17 15:30:45 UTC 2017] EOTG Web Server stoping...
[Mon Apr 17 15:30:45 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Mon Apr 17 15:33:34 UTC 2017] EOTG Web Server stoping...
[Mon Apr 17 15:35:11 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000000000000, 00:00:00:00:00:00
Attempting to register device 0000000000000000.
Device 0000000000000000 successfully registered!
method: POST, url: /devices/regsiterDevice, path: /devices/regsiterDevice
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000000000000, 00:00:00:00:00:00
Attempting to register device 0000000000000000.
Trying to register 0000000000000000, already exists!
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000000000000, 00:00:00:00:00:00
Attempting to register device 0000000000000000.
Trying to register 0000000000000000, already exists!
method: POST, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: POST, url: /devices/setBrewSettings/13, path: /devices/setBrewSettings/13
Setting brew settings for device 13.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
Error getting device status in settings request for device id 1: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
[Wed Apr 19 01:55:53 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 01:55:53 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /preset/getPresets/13, path: /preset/getPresets/13
method: GET, url: /preset/getPresets/13, path: /preset/getPresets/13
method: GET, url: /preset/getDevicePresets/13, path: /preset/getDevicePresets/13
method: GET, url: /preset/getDevicePresets/13, path: /preset/getDevicePresets/13
method: GET, url: /preset/getPresets/13, path: /preset/getPresets/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2',
  id: 1 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3',
  id: 2 }
[Wed Apr 19 01:59:51 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 01:59:51 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3',
  id: 1 }
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
Changing status current_status for device 13
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
Changing status current_status for device 13
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
Changing status current_state for device 13
[Wed Apr 19 04:49:41 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 04:49:41 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
Changing status current_state for device 13
Status type current_state for device 13 should be waiting
[Wed Apr 19 05:03:00 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:03:00 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
Unhandled rejection Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select brew_setting_value from device_brew_setting where brew_setting_type_id = ' at line 1
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:191:7)
    at readableAddChunk (_stream_readable.js:178:18)
    at Socket.Readable.push (_stream_readable.js:136:10)
    at TCP.onread (net.js:559:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Wed Apr 19 05:07:13 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:07:13 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:192
    }
    ^
SyntaxError: missing ) after argument list
    at createScript (vm.js:53:10)
    at Object.runInThisContext (vm.js:95:10)
    at Module._compile (module.js:543:28)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-19T05_07_19_769Z-debug.log
[Wed Apr 19 05:07:19 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:07:19 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:192
    }
    ^
SyntaxError: missing ) after argument list
    at createScript (vm.js:53:10)
    at Object.runInThisContext (vm.js:95:10)
    at Module._compile (module.js:543:28)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-19T05_07_25_130Z-debug.log
[Wed Apr 19 05:07:25 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:07:25 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:192
    }
    ^
SyntaxError: missing ) after argument list
    at createScript (vm.js:53:10)
    at Object.runInThisContext (vm.js:95:10)
    at Module._compile (module.js:543:28)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-19T05_07_30_664Z-debug.log
[Wed Apr 19 05:07:30 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:07:30 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:192
    }
    ^
SyntaxError: missing ) after argument list
    at createScript (vm.js:53:10)
    at Object.runInThisContext (vm.js:95:10)
    at Module._compile (module.js:543:28)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-19T05_07_36_026Z-debug.log
[Wed Apr 19 05:07:36 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:07:36 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:192
    }
    ^
SyntaxError: missing ) after argument list
    at createScript (vm.js:53:10)
    at Object.runInThisContext (vm.js:95:10)
    at Module._compile (module.js:543:28)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-19T05_07_41_586Z-debug.log
[Wed Apr 19 05:07:41 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:07:41 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

/usr/local/eotg-server/api/routes/devices.js:192
    }
    ^
SyntaxError: missing ) after argument list
    at createScript (vm.js:53:10)
    at Object.runInThisContext (vm.js:95:10)
    at Module._compile (module.js:543:28)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/usr/local/eotg-server/api/routes/index.js:7:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)

npm ERR! Linux 4.4.0-63-generic
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start"
npm ERR! node v7.8.0
npm ERR! npm  v4.2.0
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! eotg_api@1.0.0 start: `export NODE_ENV=production && node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the eotg_api@1.0.0 start script 'export NODE_ENV=production && node server.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the eotg_api package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     export NODE_ENV=production && node server.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs eotg_api
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls eotg_api
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /root/.npm/_logs/2017-04-19T05_07_47_145Z-debug.log
[Wed Apr 19 05:07:47 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:08:29 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
[Wed Apr 19 05:09:12 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:09:12 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
[ [ RowDataPacket { brew_setting_value: '1' } ],
  [ FieldPacket {
      catalog: 'def',
      db: 'brew',
      table: 'device_brew_setting',
      orgTable: 'device_brew_setting',
      name: 'brew_setting_value',
      orgName: 'brew_setting_value',
      charsetNr: 33,
      length: 765,
      type: 253,
      flags: 4097,
      decimals: 0,
      default: undefined,
      zeroFill: false,
      protocol41: true } ] ]
[Wed Apr 19 05:10:41 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:10:41 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
undefined
[Wed Apr 19 05:11:22 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:11:22 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
[ RowDataPacket { brew_setting_value: '0' } ]
[Wed Apr 19 05:12:13 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:12:14 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
RowDataPacket { brew_setting_value: '0' }
[Wed Apr 19 05:13:16 UTC 2017] EOTG Web Server stoping...
[Wed Apr 19 05:13:16 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew/13, path: /devices/shouldBrew/13
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /setBrewEnable/0, path: /setBrewEnable/0
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /status/setDeviceStatus/1, path: /status/setDeviceStatus/1
method: GET, url: /status/setDeviceStatus/0, path: /status/setDeviceStatus/0
method: GET, url: /status/setDeviceStatus/1, path: /status/setDeviceStatus/1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /status/setBrewEnable/0, path: /status/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices//status/getDeviceStatus/1, path: /devices//status/getDeviceStatus/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/status/getDeviceStatus/1, path: /devices/status/getDeviceStatus/1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/status/getDeviceStatus/0, path: /devices/status/getDeviceStatus/0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/status/getDeviceStatus/13, path: /devices/status/getDeviceStatus/13
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
result is : 
0
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
0
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/1, path: /presets/getPresets/1
Getting brew presets for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62097',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62098',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62107',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62108',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62121',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62122',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62140',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62141',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62156',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62157',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62172',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62173',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62186',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62187',
  id: 1 }
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62201',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62202',
  id: 1 }
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62224',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62225',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62237',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62238',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62252',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62253',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62275',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62276',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62286',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62287',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62303',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62304',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62317',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62318',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62332',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62333',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62358',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62359',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
result is : 
1
method: POST, url: /status/setDeviceStatus, path: /status/setDeviceStatus
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62377',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62378',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62391',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62392',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62415',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62416',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62424',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62425',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62442',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62443',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62456',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62457',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62475',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62476',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62492',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62493',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62505',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62506',
  id: 1 }
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62522',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62523',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62565',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62566',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62576',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62577',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62597',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62598',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62610',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62611',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62623',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62624',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62633',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62634',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62654',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62655',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62674',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62675',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62683',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62684',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62697',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62698',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62712',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62713',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62724',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62725',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62742',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62743',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62753',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62754',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62765',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62766',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62777',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62778',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62789',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62790',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62801',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62802',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62813',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62814',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62825',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62826',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62837',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62838',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62849',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62850',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62861',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62862',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62873',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62874',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62885',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62886',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62897',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62898',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62909',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62910',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62921',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62922',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62938',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62939',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62958',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62959',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62974',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62975',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62990',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c62991',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63000',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63001',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63012',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63013',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63024',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63025',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63036',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63037',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63047',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63048',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63064',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63065',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63076',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63077',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63088',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63089',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63100',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63101',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63112',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63113',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63124',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63125',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63136',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63137',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63148',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63149',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63166',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63167',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63188',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63189',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63199',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63200',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
result is : 
1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63221',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63222',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63233',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63234',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63247',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63248',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63259',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63260',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63271',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63272',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63283',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63284',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63295',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63296',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63307',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63308',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63319',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63320',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63331',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63332',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63343',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63344',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: GET, url: /devices/getPresets/13, path: /devices/getPresets/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63357',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c63358',
  id: 1 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
[Tue Apr 25 04:44:19 UTC 2017] EOTG Web Server stoping...
[Tue Apr 25 04:44:20 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
necessary info: preset id = -1, preset setting type = 1
new preset id is 3
Unhandled rejection Error: ER_BAD_FIELD_ERROR: Unknown column 'preset_value' in 'field list'
    at Query.Sequence._packetToError (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Parser.js:75:12)
    at Protocol.write (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:191:7)
    at readableAddChunk (_stream_readable.js:178:18)
    at Socket.Readable.push (_stream_readable.js:136:10)
    at TCP.onread (net.js:559:20)
    --------------------
    at Protocol._enqueue (/usr/local/eotg-server/api/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/usr/local/eotg-server/api/node_modules/mysql/lib/Connection.js:208:25)
    at /usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:152:18
    at Promise._execute (/usr/local/eotg-server/api/node_modules/bluebird/js/release/debuggability.js:300:9)
    at Promise._resolveFromExecutor (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:483:18)
    at new Promise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:79:10)
    at Client_MySQL._query (/usr/local/eotg-server/api/node_modules/knex/lib/dialects/mysql/index.js:146:12)
    at Client_MySQL.query (/usr/local/eotg-server/api/node_modules/knex/lib/client.js:197:17)
    at Runner.<anonymous> (/usr/local/eotg-server/api/node_modules/knex/lib/runner.js:146:36)
    at Runner.tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Runner.query (/usr/local/eotg-server/api/node_modules/bluebird/js/release/method.js:15:34)
    at /usr/local/eotg-server/api/node_modules/knex/lib/runner.js:65:21
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at /usr/local/eotg-server/api/node_modules/bluebird/js/release/using.js:185:26
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
[Tue Apr 25 04:49:36 UTC 2017] EOTG Web Server stoping...
[Tue Apr 25 04:49:36 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
necessary info: preset id = -1, preset setting type = 1
new preset id is 4
[Tue Apr 25 05:57:52 UTC 2017] EOTG Web Server stoping...
[Tue Apr 25 05:57:52 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
SyntaxError: Unexpected token { in JSON at position 79
    at JSON.parse (<anonymous>)
    at parse (/usr/local/eotg-server/api/node_modules/body-parser/lib/types/json.js:88:17)
    at /usr/local/eotg-server/api/node_modules/body-parser/lib/read.js:116:18
    at invokeCallback (/usr/local/eotg-server/api/node_modules/raw-body/index.js:262:16)
    at done (/usr/local/eotg-server/api/node_modules/raw-body/index.js:251:7)
    at IncomingMessage.onEnd (/usr/local/eotg-server/api/node_modules/raw-body/index.js:307:7)
    at emitNone (events.js:86:13)
    at IncomingMessage.emit (events.js:188:7)
    at endReadableNT (_stream_readable.js:975:12)
    at _combinedTickCallback (internal/process/next_tick.js:80:11)
    at process._tickCallback (internal/process/next_tick.js:104:9)
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 5
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 6
[Tue Apr 25 06:01:11 UTC 2017] EOTG Web Server stoping...
[Tue Apr 25 06:01:11 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 3
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
brew enable = 0
Unhandled rejection TypeError: res.status is not a function
    at /usr/local/eotg-server/api/routes/devices.js:196:17
    at tryCatcher (/usr/local/eotg-server/api/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/usr/local/eotg-server/api/node_modules/bluebird/js/release/promise.js:693:18)
    at Async._drainQueue (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/usr/local/eotg-server/api/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:672:20)
    at tryOnImmediate (timers.js:645:5)
    at processImmediate [as _immediateCallback] (timers.js:617:5)
[Tue Apr 25 06:38:17 UTC 2017] EOTG Web Server stoping...
[Tue Apr 25 06:38:17 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
brew enable = 0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
brew enable = 0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
brew enable = 0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: POST, url: /devices/setBrewEnable/2, path: /devices/setBrewEnable/2
brew enable = 2
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
brew enable = 0
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: POST, url: /devices/setBrewEnable/2, path: /devices/setBrewEnable/2
brew enable = 2
method: POST, url: /devices/setBrewEnable/0, path: /devices/setBrewEnable/0
brew enable = 0
method: GET, url: /status/getDeviceStatus/-1, path: /status/getDeviceStatus/-1
Getting status for device -1.
Error getting device status for device -1
method: GET, url: /presets/getPresets/-1, path: /presets/getPresets/-1
Getting brew presets for device -1.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/-1, path: /status/getDeviceStatus/-1
Getting status for device -1.
Error getting device status for device -1
method: GET, url: /presets/getPresets/-1, path: /presets/getPresets/-1
Getting brew presets for device -1.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: GET, url: /status/getDeviceStatus/-1, path: /status/getDeviceStatus/-1
Getting status for device -1.
Error getting device status for device -1
method: GET, url: /presets/getPresets/-1, path: /presets/getPresets/-1
Getting brew presets for device -1.
method: GET, url: /devices/getBrewSettings/-1, path: /devices/getBrewSettings/-1
Getting brew settings for device -1.
Error getting device status in settings request for device id -1: Cannot read property 'attributes' of null
method: POST, url: /status/setDeviceStatus/-1, path: /status/setDeviceStatus/-1
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c18',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c19',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c30',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c31',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c42',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c43',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c54',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c55',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c66',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c67',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c78',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c79',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c90',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c91',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c102',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c103',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c114',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c115',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c126',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c127',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c138',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c139',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c153',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c154',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c166',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c167',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c178',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c179',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c190',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c191',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c202',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c203',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c214',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c215',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c226',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c227',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c238',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c239',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c250',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c251',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c262',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c263',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c274',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c275',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c286',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c287',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c298',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c299',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c310',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c311',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c322',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c323',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c334',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c335',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c346',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c347',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c358',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c359',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c370',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c371',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c382',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c383',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c394',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c395',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c406',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c407',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c418',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c419',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c430',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c431',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c442',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c443',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c454',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c455',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c466',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c467',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c478',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c479',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c490',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c491',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c502',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c503',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c514',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c515',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c526',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c527',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c538',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c539',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c550',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c551',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c562',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c563',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c574',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c575',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c586',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c587',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c598',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c599',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c610',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c611',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c622',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c623',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c634',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c635',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c646',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c647',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c658',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c659',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c670',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c671',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c682',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c683',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c694',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c695',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c706',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c707',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c718',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c719',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c730',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c731',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c742',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c743',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c754',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c755',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c766',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c767',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c778',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c779',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c790',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c791',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c802',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c803',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c814',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c815',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c826',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c827',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c838',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c839',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c850',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c851',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c862',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c863',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c874',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c875',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c886',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c887',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c898',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c899',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c910',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c911',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c922',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c923',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c934',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c935',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c946',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c947',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c958',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c959',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c970',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c971',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c982',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c983',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c994',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c995',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1006',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1007',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1018',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1019',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1030',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1031',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1042',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1043',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1054',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1055',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1066',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1067',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1078',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1079',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1090',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1091',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1102',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1103',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1114',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1115',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1126',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1127',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1138',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1139',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1150',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1151',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1162',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1163',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1174',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1175',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1186',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1187',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1198',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1199',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1210',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1211',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1222',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1223',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1234',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1235',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1246',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1247',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1258',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1259',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1270',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1271',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1282',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1283',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1294',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1295',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1306',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1307',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1318',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1319',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1330',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1331',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1342',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1343',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1354',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1355',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1366',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1367',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1378',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1379',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1390',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1391',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1402',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1403',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1414',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1415',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1426',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1427',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1438',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1439',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1450',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1451',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1462',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1463',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1474',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1475',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1486',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1487',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1498',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1499',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1510',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1511',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1522',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1523',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1534',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1535',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1546',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1547',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1558',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1559',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1570',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1571',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1582',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1583',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1594',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1595',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1606',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1607',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1618',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1619',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1630',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1631',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1642',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1643',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1654',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1655',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1666',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1667',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1678',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1679',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1690',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1691',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1702',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1703',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1714',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1715',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1726',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1727',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1738',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1739',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1750',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1751',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1762',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1763',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1774',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1775',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1786',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1787',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1798',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1799',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1810',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1811',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1822',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1823',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1834',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1835',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1846',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1847',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1858',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1859',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1870',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1871',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1882',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1883',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1894',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1895',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1906',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1907',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1918',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1919',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1930',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1931',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1942',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1943',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1954',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1955',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1966',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1967',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1978',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1979',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1990',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c1991',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2002',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2003',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2014',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2015',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2026',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2027',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2038',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2039',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2050',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2051',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2062',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2063',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2074',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2075',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2086',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2087',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2098',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2099',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2110',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2111',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2122',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2123',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2134',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2135',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2146',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2147',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2158',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2159',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2170',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2171',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2182',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2183',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2194',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2195',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2206',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2207',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2218',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2219',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2230',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2231',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2242',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2243',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2254',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2255',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2266',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2267',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2278',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2279',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2290',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2291',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2302',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2303',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2314',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2315',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2326',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2327',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2338',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2339',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2350',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2351',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2362',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2363',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2374',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2375',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2386',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2387',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2398',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2399',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2410',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2411',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2422',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2423',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2434',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2435',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2446',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2447',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2458',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2459',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2470',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2471',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2482',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2483',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2494',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2495',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2506',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2507',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2518',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2519',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2530',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2531',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2542',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2543',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2554',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2555',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2566',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2567',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2578',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2579',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2590',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2591',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2602',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2603',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2614',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2615',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2626',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2627',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2638',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2639',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2650',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2651',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2662',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2663',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2674',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2675',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2686',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2687',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2698',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2699',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2710',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2711',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2722',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2723',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2734',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2735',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2746',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2747',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2758',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2759',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2770',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2771',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2782',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2783',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2794',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2795',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2806',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2807',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2818',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2819',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2830',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2831',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2842',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2843',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2854',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2855',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2866',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2867',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2878',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2879',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2890',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2891',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2902',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2903',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2914',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2915',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2926',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2927',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2938',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2939',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2950',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2951',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2962',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2963',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2974',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2975',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2986',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2987',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2998',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c2999',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3010',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3011',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3022',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3023',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3034',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3035',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3046',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3047',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3058',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3059',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3070',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3071',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3082',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3083',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3094',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3095',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3106',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3107',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3118',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3119',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3130',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3131',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3142',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3143',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3154',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3155',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3166',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3167',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3178',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3179',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3190',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3191',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3202',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3203',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3214',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3215',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3226',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3227',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3238',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3239',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3250',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3251',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3262',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3263',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3274',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3275',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3286',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3287',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3298',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3299',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3310',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3311',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3322',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3323',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3334',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3335',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3346',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3347',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3358',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3359',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3370',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3371',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3382',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3383',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3394',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3395',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3406',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3407',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3418',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3419',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3430',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3431',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3442',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3443',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3454',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3455',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3466',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3467',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3478',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3479',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3490',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3491',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3502',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3503',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3514',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3515',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3526',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3527',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3538',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3539',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3550',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3551',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3562',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3563',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3574',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3575',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3586',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3587',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3598',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3599',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3610',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3611',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3622',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3623',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3634',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3635',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3646',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3647',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3658',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3659',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3670',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3671',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3682',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3683',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3694',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3695',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3706',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3707',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3718',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3719',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3730',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3731',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3742',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3743',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3754',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3755',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3766',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3767',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3778',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3779',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3790',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3791',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3802',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3803',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3814',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3815',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3826',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3827',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3838',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3839',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3850',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3851',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3862',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3863',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3874',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3875',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3886',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3887',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3898',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3899',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3910',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3911',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3922',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3923',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3934',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3935',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3946',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3947',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3958',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3959',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3970',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3971',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3982',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3983',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3994',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c3995',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4006',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4007',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4018',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4019',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4030',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4031',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4042',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4043',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4054',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4055',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4066',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4067',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4078',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4079',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4090',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4091',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4102',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4103',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4114',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4115',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4126',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4127',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4138',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4139',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4150',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4151',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4162',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4163',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4174',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4175',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4186',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4187',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4198',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4199',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4210',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4211',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4222',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4223',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4234',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4235',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4246',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4247',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4258',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4259',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4270',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4271',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4282',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4283',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4294',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4295',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4306',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4307',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4318',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4319',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4330',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4331',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4342',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4343',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4354',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4355',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4366',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4367',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4378',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4379',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4390',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4391',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4402',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4403',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4414',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4415',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4426',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4427',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4438',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4439',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4450',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4451',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4462',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4463',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4474',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4475',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4486',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4487',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4498',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4499',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4510',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4511',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4522',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4523',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4534',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4535',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4546',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4547',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4558',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4559',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4570',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4571',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4582',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4583',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4594',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4595',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4606',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4607',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4618',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4619',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4630',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4631',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4642',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4643',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4654',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4655',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4666',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4667',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4678',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4679',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4690',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4691',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4702',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4703',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4714',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4715',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4726',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4727',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4738',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4739',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4750',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4751',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4762',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4763',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4774',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4775',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4786',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4787',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4798',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4799',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4810',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4811',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4822',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4823',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4834',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4835',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4846',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4847',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4858',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4859',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4870',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4871',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4882',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4883',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4894',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4895',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4906',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4907',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4918',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4919',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4930',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4931',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4942',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4943',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4954',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4955',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4966',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4967',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4978',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4979',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4990',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c4991',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5002',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5003',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5014',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5015',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5026',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5027',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5038',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5039',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5050',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5051',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5062',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5063',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5074',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5075',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5086',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5087',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5098',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5099',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5110',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5111',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5122',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5123',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5134',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5135',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5146',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5147',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5158',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5159',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5170',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5171',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5182',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5183',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5194',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5195',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5206',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5207',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5218',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5219',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5230',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5231',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5242',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5243',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5254',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5255',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5266',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5267',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5278',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5279',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5290',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5291',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5302',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5303',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5314',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5315',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5326',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5327',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5338',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5339',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5350',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5351',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5362',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5363',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5374',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5375',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5386',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5387',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5398',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5399',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5410',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5411',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5422',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5423',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5434',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5435',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5446',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5447',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5458',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5459',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5470',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5471',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5482',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5483',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5494',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5495',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5506',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5507',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5518',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5519',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5530',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5531',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5542',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5543',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5554',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5555',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5566',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5567',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5578',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5579',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5590',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5591',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5602',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5603',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5614',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5615',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5626',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5627',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5638',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5639',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5650',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5651',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5662',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5663',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5674',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5675',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5686',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5687',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5698',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5699',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5710',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5711',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5722',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5723',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5734',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5735',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5746',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5747',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5758',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5759',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5770',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5771',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5782',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5783',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5794',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5795',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5806',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5807',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5818',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5819',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5830',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5831',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5842',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5843',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5854',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5855',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5866',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5867',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5878',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5879',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5890',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5891',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5902',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5903',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5914',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5915',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5926',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5927',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5938',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5939',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5950',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5951',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5962',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5963',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5974',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5975',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5986',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5987',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5998',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c5999',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6010',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6011',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6022',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6023',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6034',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6035',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6046',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6047',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6058',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6059',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6070',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6071',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6082',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6083',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6094',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6095',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6106',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6107',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6118',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6119',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6130',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6131',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6142',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6143',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6154',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6155',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6166',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6167',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6178',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6179',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6190',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6191',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6202',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6203',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6214',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6215',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6226',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6227',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6238',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6239',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6250',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6251',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6262',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6263',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6274',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6275',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6286',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6287',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6298',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6299',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6310',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6311',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6322',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6323',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6334',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6335',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6346',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6347',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6358',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6359',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6370',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6371',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6382',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6383',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6394',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6395',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6406',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6407',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6418',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6419',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6430',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6431',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6442',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6443',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6455',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6456',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6467',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6468',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6479',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6480',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6491',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6492',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6503',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6504',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6515',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6516',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6527',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6528',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6539',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6540',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6551',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6552',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6563',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6564',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6575',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6576',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6587',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6588',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6599',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6600',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6611',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6612',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6623',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6624',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6635',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6636',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6647',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6648',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6659',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6660',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6671',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6672',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6683',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6684',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6695',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6696',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6707',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6708',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6719',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6720',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6731',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6732',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6743',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6744',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6755',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6756',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6767',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6768',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6779',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6780',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6791',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6792',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6803',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6804',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6815',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6816',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6827',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6828',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6839',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6840',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6851',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6852',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6863',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6864',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6875',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6876',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6887',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6888',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6899',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6900',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6911',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6912',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6923',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6924',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6935',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6936',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6947',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6948',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6959',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6960',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6971',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6972',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6983',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6984',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6995',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c6996',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7007',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7008',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7019',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7020',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7031',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7032',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7043',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7044',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7055',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7056',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7067',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7068',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7079',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7080',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7091',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7092',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7103',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7104',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7115',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7116',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7127',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7128',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7139',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7140',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7151',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7152',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7163',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7164',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7175',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7176',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7187',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7188',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7199',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7200',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7211',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7212',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7223',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7224',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7235',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7236',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7247',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7248',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7259',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7260',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7271',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7272',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7283',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7284',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7295',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7296',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7307',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7308',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7319',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7320',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7331',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7332',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7343',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7344',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7355',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7356',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7367',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7368',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7379',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7380',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7391',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7392',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7403',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7404',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7415',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7416',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7427',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7428',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7439',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7440',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7451',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7452',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7463',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7464',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7475',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7476',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7487',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7488',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7499',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7500',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7511',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7512',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7523',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7524',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7535',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7536',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7547',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7548',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7559',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7560',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7571',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7572',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7583',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7584',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7595',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7596',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7607',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7608',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7619',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7620',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7631',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7632',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7643',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7644',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7655',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7656',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7667',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7668',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7679',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7680',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7691',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7692',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7703',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7704',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7715',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7716',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7727',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7728',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7739',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7740',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7751',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7752',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7763',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7764',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7775',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7776',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7787',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7788',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7799',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7800',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7811',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7812',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7823',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7824',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7835',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7836',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7847',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7848',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7859',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7860',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7871',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7872',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7883',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7884',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7895',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7896',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7907',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7908',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7919',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7920',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7931',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7932',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7943',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7944',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7955',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7956',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7967',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7968',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7979',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7980',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7991',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c7992',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8003',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8004',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8015',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8016',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8027',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8028',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8039',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8040',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8051',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8052',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8063',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8064',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8075',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8076',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8087',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8088',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8099',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8100',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8111',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8112',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8123',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8124',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8135',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8136',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8147',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8148',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8159',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8160',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8171',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8172',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8183',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8184',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8195',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8196',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8207',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8208',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8219',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8220',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8231',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8232',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8243',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8244',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8255',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8256',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8267',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8268',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8279',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8280',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8291',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8292',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8303',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8304',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8315',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8316',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8327',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8328',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8339',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8340',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8351',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8352',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8363',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8364',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8375',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8376',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8387',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8388',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8399',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8400',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8411',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8412',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8423',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8424',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8435',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8436',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8447',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8448',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8459',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8460',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8471',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8472',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8483',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8484',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8495',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8496',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8507',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8508',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8519',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8520',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8531',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8532',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8543',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8544',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8555',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8556',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8567',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8568',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8579',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8580',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8591',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8592',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8603',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8604',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8615',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8616',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8627',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8628',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8639',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8640',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8651',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8652',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8663',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8664',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8675',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8676',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8687',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8688',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8699',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8700',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8711',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8712',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8723',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8724',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8735',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8736',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8747',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8748',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8759',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8760',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8771',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8772',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8783',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8784',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8795',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8796',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8807',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8808',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8819',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8820',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8831',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8832',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8843',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8844',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8855',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8856',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8867',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8868',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8879',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8880',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8891',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8892',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8903',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8904',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8915',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8916',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8927',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8928',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8939',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8940',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8951',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8952',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8963',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8964',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8975',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8976',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8987',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8988',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c8999',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9000',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9011',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9012',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9023',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9024',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9035',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9036',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9047',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9048',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9059',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9060',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9071',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9072',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9083',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9084',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9095',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9096',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9107',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9108',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9119',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9120',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9131',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9132',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9143',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9144',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9155',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9156',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9167',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9168',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9179',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9180',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9191',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9192',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9203',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9204',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9215',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9216',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9230',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9231',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9242',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9243',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9254',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9255',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9266',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9267',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9278',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9279',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9290',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9291',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9302',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9303',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9314',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9315',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9326',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9327',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9338',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9339',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9350',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9351',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9362',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9363',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9374',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9375',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9386',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9387',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9398',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9399',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9410',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9411',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9422',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9423',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9434',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9435',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9446',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9447',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9458',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9459',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9473',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9474',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9485',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9486',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9497',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9498',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9509',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9510',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9521',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9522',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9533',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9534',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9545',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9546',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9557',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9558',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9569',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9570',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9581',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9582',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9593',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9594',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9605',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9606',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9617',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9618',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9629',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9630',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9641',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9642',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9653',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9654',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9665',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9666',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9677',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9678',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9689',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9690',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9701',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9702',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9713',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9714',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9725',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9726',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9737',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9738',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9749',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9750',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9761',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9762',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9773',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9774',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9785',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9786',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9797',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9798',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9809',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9810',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9821',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9822',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9833',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9834',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9845',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9846',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9857',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9858',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9869',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9870',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9881',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9882',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9893',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9894',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9905',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9906',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9917',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9918',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9929',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9930',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9941',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9942',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9953',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9954',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9965',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9966',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9977',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9978',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9989',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c9990',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10001',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10002',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10013',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10014',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10025',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10026',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10037',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10038',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10049',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10050',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10061',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10062',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10073',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10074',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10085',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10086',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10097',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10098',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10109',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10110',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10121',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10122',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10133',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10134',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10145',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10146',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10157',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10158',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10169',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10170',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10181',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10182',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10193',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10194',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10205',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10206',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10217',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10218',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10229',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10230',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10241',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10242',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10253',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10254',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10265',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10266',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10277',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10278',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10292',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10293',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10304',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10305',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10316',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10317',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10328',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10329',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10340',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10341',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10352',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10353',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10364',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10365',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10376',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10377',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10388',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10389',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10400',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10401',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10409',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10410',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10421',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10422',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10433',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10434',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10445',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10446',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10457',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10458',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10469',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10470',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10481',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10482',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10493',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10494',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10505',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10506',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10517',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10518',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10529',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10530',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10541',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10542',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10553',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10554',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10565',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10566',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10577',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10578',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10589',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10590',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10601',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10602',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10613',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10614',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10625',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10626',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10637',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10638',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10649',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10650',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10661',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10662',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10673',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10674',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10685',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10686',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10697',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10698',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10709',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10710',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10721',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10722',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10733',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10734',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10745',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10746',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10757',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10758',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10769',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10770',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10781',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10782',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10793',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10794',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10805',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10806',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10817',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10818',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10829',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10830',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10841',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10842',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10853',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10854',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /devices/registerDevice, path: /devices/registerDevice
0000000028a882e6, b8:27:eb:fd:d7:b3
Attempting to register device 0000000028a882e6.
Trying to register 0000000028a882e6, already exists!
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10868',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10869',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10880',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10881',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10892',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10893',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10904',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10905',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10916',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10917',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10928',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10929',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10940',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10941',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10949',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10950',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10961',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10962',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10973',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10974',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10985',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10986',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10997',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c10998',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11009',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11010',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11021',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11022',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11033',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11034',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11045',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11046',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11057',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11058',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11069',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11070',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11081',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11082',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11093',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11094',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11105',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11106',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11117',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11118',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11129',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11130',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11141',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11142',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11153',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11154',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11165',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11166',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11177',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11178',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11189',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11190',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11201',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11202',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11213',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11214',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11225',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11226',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11237',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11238',
  id: 1 }
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11255',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11256',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11267',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11268',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11279',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11280',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11291',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11292',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11303',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11304',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11315',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11316',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11327',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11328',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11339',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11340',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11352',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11353',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11366',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11367',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11378',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11379',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11387',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11388',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11399',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11400',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11410',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11411',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11419',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11420',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11430',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11431',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11438',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11439',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11446',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11447',
  id: 1 }
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11454',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11455',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11462',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11463',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11470',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11471',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11478',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11479',
  id: 1 }
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11486',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11487',
  id: 1 }
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: POST, url: /devices/setPresets/13/-1, path: /devices/setPresets/13/-1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11494',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11495',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11502',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11503',
  id: 1 }
method: POST, url: /presets/setPresets/13/-1, path: /presets/setPresets/13/-1
method: POST, url: /presets/setPresets/13/-1, path: /presets/setPresets/13/-1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11510',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11511',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11518',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11519',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11526',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11527',
  id: 1 }
method: POST, url: /presets/setPresets/13/-1, path: /presets/setPresets/13/-1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11535',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11536',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11547',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11548',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11558',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11559',
  id: 1 }
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 3
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11571',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11572',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11573',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11583',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11584',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11585',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11595',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11596',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11597',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11610',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11611',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11612',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11625',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11626',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11627',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11646',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11647',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11648',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11658',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11659',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11660',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11669',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11670',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11671',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11681',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11682',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11683',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11694',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11695',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11696',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11706',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11707',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11708',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11719',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11720',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11721',
  id: 1 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11736',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11737',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11738',
  id: 1 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11748',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11749',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11750',
  id: 1 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 4
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11767',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11768',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11769',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11770',
  id: 1 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11782',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11783',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11784',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11785',
  id: 1 }
new preset id is 5
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11807',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11808',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11809',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11810',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11811',
  id: 5 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11826',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11827',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11828',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11829',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11830',
  id: 5 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11847',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11848',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11849',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11850',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11851',
  id: 5 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11868',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11869',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11870',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11871',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11872',
  id: 5 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11891',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11892',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11893',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11894',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11895',
  id: 5 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11912',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11913',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11914',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11915',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11916',
  id: 5 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
new preset id is 6
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11931',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11932',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11933',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11934',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11935',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 0,
        models: [],
        _byId: {},
        relatedData: [Object] } },
  cid: 'c11936',
  id: 6 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11960',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11961',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11962',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11963',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11964',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11965',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11981',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11982',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11983',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11984',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11985',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c11986',
  id: 6 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12002',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12003',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12004',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12005',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12006',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12007',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12026',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12027',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12028',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12029',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12030',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12031',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12050',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12051',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12052',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12053',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12054',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12055',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12074',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12075',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12076',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12077',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12078',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12079',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12098',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12099',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12100',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12101',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12102',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12103',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12122',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12123',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12124',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12125',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12126',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12127',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12146',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12147',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12148',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12149',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12150',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12151',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12170',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12171',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12172',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12173',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12174',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12175',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12194',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12195',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12196',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12197',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12198',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12199',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12218',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12219',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12220',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12221',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12222',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12223',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12242',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12243',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12244',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12245',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12246',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12247',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12266',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12267',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12268',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12269',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12270',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12271',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12290',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12291',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12292',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12293',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12294',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12295',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12313',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12314',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12315',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12316',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12317',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12318',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12342',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12343',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12344',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12345',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12346',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12347',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12366',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12367',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12368',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12369',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12370',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12371',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12390',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12391',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12392',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12393',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12394',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12395',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12414',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12415',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12416',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12417',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12418',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12419',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12438',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12439',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12440',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12441',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12442',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12443',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12462',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12463',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12464',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12465',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12466',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12467',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12486',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12487',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12488',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12489',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12490',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12491',
  id: 6 }
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
method: POST, url: /status/setDeviceStatus/13, path: /status/setDeviceStatus/13
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12516',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12517',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12518',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12519',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12520',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12521',
  id: 6 }
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12542',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12543',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12544',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12545',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12546',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12547',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12573',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12574',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12575',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12576',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12577',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12578',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12605',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12606',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12607',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12608',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12609',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12610',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12626',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12627',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12628',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12629',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12630',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12631',
  id: 6 }
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12666',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12667',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12668',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12669',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12670',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12671',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12688',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12689',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12690',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12691',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12692',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12693',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12709',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12710',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12711',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12712',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12713',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12714',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12731',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12732',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12733',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12734',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12735',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12736',
  id: 6 }
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12757',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12758',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12759',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12760',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12761',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12762',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12785',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12786',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12787',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12788',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12789',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12790',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12806',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12807',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12808',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12809',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12810',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12811',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12833',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12834',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12835',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12836',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12837',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12838',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12854',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12855',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12856',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12857',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12858',
  id: 5 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12859',
  id: 6 }
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 7
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12886',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12887',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12888',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12889',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12890',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12891',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12892',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12910',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12911',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12912',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12913',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12914',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12915',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12916',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12934',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12935',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12936',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12937',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12938',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12939',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12940',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12958',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12959',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12960',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12961',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12962',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12963',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12964',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12982',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12983',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12984',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12985',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12986',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12987',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c12988',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13006',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13007',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13008',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13009',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13010',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13011',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13012',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13031',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13032',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13033',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13034',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13035',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13036',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13037',
  id: 6 }
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13060',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13061',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13062',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13063',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13064',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13065',
  id: 7 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13066',
  id: 6 }
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 8
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13095',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13096',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13097',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13098',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13099',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13100',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13101',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13102',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13122',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13123',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13124',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13125',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13126',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13127',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13128',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13129',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13149',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13150',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13151',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13152',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13153',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13154',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13155',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13156',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13176',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13177',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13178',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13179',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13180',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13181',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13182',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13183',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13204',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13205',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13206',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13207',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13208',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13209',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13210',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13211',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13236',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13237',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13238',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13239',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13240',
  id: 5 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13241',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13242',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13243',
  id: 6 }
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 9
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13274',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13275',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13276',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13277',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13278',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13279',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13280',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13281',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13282',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13304',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13305',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13306',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13307',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13308',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13309',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13310',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13311',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13312',
  id: 6 }
method: POST, url: /devices/setBrewSettings/1, path: /devices/setBrewSettings/1
Setting brew settings for device 1.
method: POST, url: /devices/setBrewEnable/1, path: /devices/setBrewEnable/1
brew enable = 1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13338',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13339',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13340',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13341',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13342',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13343',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13344',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13345',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13346',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13368',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13369',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13370',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13371',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13372',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13373',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13374',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13375',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13376',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13397',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13398',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13399',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13400',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13401',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13402',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13403',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13404',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13405',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13427',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13428',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13429',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13430',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13431',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13432',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13433',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13434',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13435',
  id: 6 }
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13464',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13465',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13466',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13467',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13468',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13469',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13470',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13471',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13472',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13494',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13495',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13496',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13497',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13498',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13499',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13500',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13501',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13502',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13523',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13524',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13525',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13526',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13527',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13528',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13529',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13530',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13531',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13555',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13556',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13557',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13558',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13559',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13560',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13561',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13562',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13563',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13590',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13591',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13592',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13593',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13594',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13595',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13596',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13597',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13598',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13620',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13621',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13622',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13623',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13624',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13625',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13626',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13627',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13628',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13650',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13651',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13652',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13653',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13654',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13655',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13656',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13657',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13658',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13679',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13680',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13681',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13682',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13683',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13684',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13685',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13686',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13687',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13710',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13711',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13712',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13713',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13714',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13715',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13716',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13717',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13718',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13740',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13741',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13742',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13743',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13744',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13745',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13746',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13747',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13748',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13770',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13771',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13772',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13773',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13774',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13775',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13776',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13777',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13778',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13800',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13801',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13802',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13803',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13804',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13805',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13806',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13807',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13808',
  id: 6 }
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13836',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13837',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13838',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13839',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13840',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13841',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13842',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13843',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13844',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13865',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13866',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13867',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13868',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13869',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13870',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13871',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13872',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13873',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13895',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13896',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13897',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13898',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13899',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13900',
  id: 9 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13901',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13902',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13903',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: POST, url: /presets/setDevicePreset/13/-1, path: /presets/setDevicePreset/13/-1
Changing preset for device 13 to preset -1
new preset id is 10
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13937',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13938',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13939',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13940',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13941',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13942',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13943',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13944',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13945',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13946',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13970',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13971',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13972',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13973',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13974',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13975',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13976',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13977',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13978',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c13979',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14002',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14003',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14004',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14005',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14006',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14007',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14008',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14009',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14010',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14011',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14035',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14036',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14037',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14038',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14039',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14040',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14041',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14042',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14043',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14044',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14068',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14069',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14070',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14071',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14072',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14073',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14074',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14075',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14076',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14077',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
current brew preset is -1
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14108',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14109',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14110',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14111',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14112',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14113',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14114',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14115',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14116',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14117',
  id: 6 }
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14141',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14142',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14143',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14144',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14145',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14146',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14147',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14148',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14149',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14150',
  id: 6 }
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14173',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14174',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14175',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14176',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14177',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14178',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14179',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14180',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14181',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14182',
  id: 6 }
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /status/getDeviceStatus/1, path: /status/getDeviceStatus/1
Getting status for device 1.
method: GET, url: /presets/getPresets/13, path: /presets/getPresets/13
Getting brew presets for device 13.
ModelBase {
  attributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  _previousAttributes: 
   { id: 4,
     device_id: 13,
     dsc: 'custom roast - nate',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:21:53.000Z,
     updated_at: 2017-04-25T18:21:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14213',
  id: 4 }
ModelBase {
  attributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  _previousAttributes: 
   { id: 3,
     device_id: 13,
     dsc: 'CUSTOM ROAST - STEVE',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:16:05.000Z,
     updated_at: 2017-04-25T18:16:05.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14214',
  id: 3 }
ModelBase {
  attributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  _previousAttributes: 
   { id: 2,
     device_id: 13,
     dsc: 'Dark Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-16T16:52:41.000Z,
     updated_at: 2017-04-16T16:52:41.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14215',
  id: 2 }
ModelBase {
  attributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  _previousAttributes: 
   { id: 1,
     device_id: 13,
     dsc: 'Light Roast',
     enabled: <Buffer 01>,
     created_at: 2017-04-15T15:42:53.000Z,
     updated_at: 2017-04-15T15:42:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14216',
  id: 1 }
ModelBase {
  attributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  _previousAttributes: 
   { id: 5,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:23:06.000Z,
     updated_at: 2017-04-25T18:23:06.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14217',
  id: 5 }
ModelBase {
  attributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  _previousAttributes: 
   { id: 9,
     device_id: 13,
     dsc: 'Preset Name',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T20:53:34.000Z,
     updated_at: 2017-04-25T20:53:34.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14218',
  id: 9 }
ModelBase {
  attributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  _previousAttributes: 
   { id: 10,
     device_id: 13,
     dsc: 'Preset Nameidbzjxh',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T22:59:53.000Z,
     updated_at: 2017-04-25T22:59:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14219',
  id: 10 }
ModelBase {
  attributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  _previousAttributes: 
   { id: 7,
     device_id: 13,
     dsc: 'steve test',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:51:53.000Z,
     updated_at: 2017-04-25T18:51:53.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14220',
  id: 7 }
ModelBase {
  attributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  _previousAttributes: 
   { id: 8,
     device_id: 13,
     dsc: 'stevie is gay',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T19:44:02.000Z,
     updated_at: 2017-04-25T19:44:02.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14221',
  id: 8 }
ModelBase {
  attributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  _previousAttributes: 
   { id: 6,
     device_id: 13,
     dsc: 'TEST 1 204L',
     enabled: <Buffer 00>,
     created_at: 2017-04-25T18:34:10.000Z,
     updated_at: 2017-04-25T18:34:10.000Z },
  changed: {},
  relations: 
   { deviceBrewSettings: 
      CollectionBase {
        model: [Object],
        length: 2,
        models: [Object],
        _byId: [Object],
        relatedData: [Object] } },
  cid: 'c14222',
  id: 6 }
method: GET, url: /status/getDeviceStatus/13, path: /status/getDeviceStatus/13
Getting status for device 13.
method: GET, url: /coffeeTypes, path: /coffeeTypes
method: GET, url: /devices/getBrewSettings/2, path: /devices/getBrewSettings/2
Getting brew settings for device 2.
Error getting device status in settings request for device id 2: Cannot read property 'attributes' of null
method: GET, url: /devices/getBrewSettings/1, path: /devices/getBrewSettings/1
Getting brew settings for device 1.
current brew preset is -1
method: GET, url: /devices/shouldBrew, path: /devices/shouldBrew
Got poll request for brew enable.
method: GET, url: /devices/getBrewSettings/13, path: /devices/getBrewSettings/13
Getting brew settings for device 13.
current brew preset is -1
[Thu Jun  1 01:19:21 UTC 2017] EOTG Web Server stoping...
[Thu Jun  1 01:19:21 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
[Thu Jun  1 01:21:43 UTC 2017] EOTG Web Server stoping...
[Thu Jun  1 01:21:43 UTC 2017] EOTG Web Server starting...

> eotg_api@1.0.0 start /usr/local/eotg-server/api
> export NODE_ENV=production && node server.js

EOTG API listening on port 8080
method: GET, url: /devices/shouldBrew/1, path: /devices/shouldBrew/1
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew/13, path: /devices/shouldBrew/13
Got poll request for brew enable.
method: GET, url: /devices/shouldBrew/134, path: /devices/shouldBrew/134
Got poll request for brew enable.
Error getting brew enable
